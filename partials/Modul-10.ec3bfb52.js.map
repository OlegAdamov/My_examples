{"mappings":"ghBAQAA,QAAQC,IAAI,YAEVD,QAAQC,IAAI,qBAQVC,MAAM,iEANU,CACZC,QAAS,CACLC,cAAe,MAKlBC,MAAKC,GAAKA,EAAEC,SACZF,KAAKL,QAAQC,KAcrBD,QAMYC,IAAI,aAMZD,QAAQC,IAAI,aAMZD,QAAQC,IAAI,aAMZD,QAAQC,IAAI,aAUhBD,QAAQC,IAAI,eAOZD,QAAQC,IAAI,eAOZD,QAAQC,IAAI,eAWb,CAAKD,QAAQC,IAAI,yBAEJ,MAAHO,EAAgBC,SAASC,cAAc,QAC3CC,EAAWF,SAASC,cAAc,UAExCF,EAAcI,iBAAiB,SAAS,MAMxC,WACE,MAAMC,EAAS,IAAIC,gBAAgB,CACjCC,OAAQ,EAERC,MAAO,IAGT,OAAOd,MAAM,8CAA8CW,KAAUR,MAClEY,IACC,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASV,WAjBpBc,GACGhB,MAAMiB,GAqBX,SAAqBA,GACnB,MAAMC,EAASD,EACZE,KAAI,EAACC,GAAEA,EAAEC,MAAEA,EAAKC,KAAEA,EAAIC,OAAEA,KAChB,0CACsBF,EAAMG,MAAM,EAAG,0CACnBJ,yCACEG,yCACAD,yBAG5BG,KAAK,IACRnB,EAASoB,UAAYR,EAhCFS,CAAYV,KAC5BW,OAAOC,GAAUlC,QAAQC,IAAIiC,QAiCjC,CAEIlC,QAAQC,IAAI,oCAEb,MAAMO,EAAgBC,SAASC,cAAc,QAC3CC,EAAWF,SAASC,cAAc,UAClCyB,EAAa1B,SAASC,cAAc,UAC1C,IAAI0B,GAAiB,EAGjBC,EAAO,EAEPC,EAAQ,EAEZ,MAAMC,EAAa,IAAMD,EAEzB9B,EAAcI,iBAAiB,SAAS,KAEtC,GAAIyB,EAAOE,EACT,OA+CJ,WACE,GAAIH,EACF,OAEFA,GAAiB,EACjBD,EAAWK,UAAUC,IAAI,cACzBC,YAAW,KACTP,EAAWK,UAAUG,OAAO,cAC5BP,GAAiB,IAChB,KAxDMQ,IAiBX,WACE,MAAM/B,EAAS,IAAIC,gBAAgB,CACjCC,OAAQuB,EACRtB,MAAOqB,IAGT,OAAOnC,MAAM,8CAA8CW,KAAUR,MAClEY,IACC,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASV,WAzBpBsC,GACGxC,MAAMiB,KA6BX,SAAqBA,GACnB,MAAMC,EAASD,EACZE,KAAI,EAACC,GAAEA,EAAEC,MAAEA,EAAKC,KAAEA,EAAIC,OAAEA,KAChB,0CACsBF,EAAMG,MAAM,EAAG,0CACnBJ,yCACEG,yCACAD,yBAG5BG,KAAK,IACRnB,EAASmC,mBAAmB,YAAavB,GAvCrCwB,CAAYzB,GAEZe,GAAQ,EAGJA,EAAO,IACT7B,EAAcwC,YAAc,uBAG/Bf,OAAOC,GAAUlC,QAAQC,IAAIiC,QA4CjClC,QAEYC,IAAI,eAIZD,QAAQC,IAAI,eAIZD,QAAQC,IAAI,eAIZD,QAAQC,IAAI,eAKhBD,QAAQC,IAAI","sources":["src/js/Mod10-Lesson20.js"],"sourcesContent":["import '../sass/_modul10.scss'\n    import pokemonCardTpl from '../templates/pokemon-card.hbs';\n    import API from './api-service'\nimport templateFunction from '../templates/pokemon-card.hbs';\nimport getRefs from './get-refs';\n   \n\n\nconsole.log('Repeta: ');\n\n{ console.log('Repeta: Пагинация');\n\n    const options = {\n        headers: {\n            Authorization: '',\n        },\n    };\n\n    fetch('https://newsapi.org/v2/everything?q=cat&language=en&pageSize=5', options)\n        .then(r => r.json())\n        .then(console.log);\n    \n\n\n\n\n\n\n\n\n\n\n\n    \n}\n\n\n\n\n\n    {console.log('Example: ');\n\n\n\n}\n\n    {console.log('Example: ');\n\n\n\n}\n\n    {console.log('Example: ');\n\n\n\n}\n\n    {console.log('Example: ');\n\n\n\n}\n\n\n\n\n\n{console.log('Autocheck: ');\n\n\n\n\n}\n\n{console.log('Autocheck: ');\n\n\n\n\n}\n\n{console.log('Autocheck: ');\n\n\n    \n\n}\n\n\n\n\n\n{    console.log('Task-Konsp: Пагинация');\n\n    const fetchPostsBtn = document.querySelector(\".btn\");\nconst userList = document.querySelector(\".posts\");\n\nfetchPostsBtn.addEventListener(\"click\", () => {\n  fetchPosts()\n    .then((posts) => renderPosts(posts))\n    .catch((error) => console.log(error));\n});\n\nfunction fetchPosts() {\n  const params = new URLSearchParams({\n    _limit: 5,\n    // Change the group number here\n    _page: 1\n  });\n\n  return fetch(`https://jsonplaceholder.typicode.com/posts?${params}`).then(\n    (response) => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      return response.json();\n    }\n  );\n}\n\nfunction renderPosts(posts) {\n  const markup = posts\n    .map(({ id, title, body, userId }) => {\n      return `<li>\n          <h2 class=\"post-title\">${title.slice(0, 30)}</h2>\n          <p><b>Post id</b>: ${id}</p>\n          <p><b>Author id</b>: ${userId}</p>\n          <p class=\"post-body\">${body}</p>\n        </li>`;\n    })\n    .join(\"\");\n  userList.innerHTML = markup;\n}\n}\n\n{    console.log('Task-Konsp:Приём «Загрузить ещё»');\n\n    const fetchPostsBtn = document.querySelector(\".btn\");\nconst userList = document.querySelector(\".posts\");\nconst alertPopup = document.querySelector(\".alert\");\nlet isAlertVisible = false;\n\n// Controls the group number\nlet page = 1;\n// Controls the number of items in the group\nlet limit = 2;\n// In our case total number of pages is calculated on frontend\nconst totalPages = 100 / limit;\n\nfetchPostsBtn.addEventListener(\"click\", () => {\n  // Check the end of the collection to display an alert\n  if (page > totalPages) {\n    return toggleAlertPopup();\n  }\n\n  fetchPosts()\n    .then((posts) => {\n      renderPosts(posts);\n      // Increase the group number\n      page += 1;\n\n      // Replace button text after first request\n      if (page > 1) {\n        fetchPostsBtn.textContent = \"Fetch more posts\";\n      }\n    })\n    .catch((error) => console.log(error));\n});\n\nfunction fetchPosts() {\n  const params = new URLSearchParams({\n    _limit: limit,\n    _page: page\n  });\n\n  return fetch(`https://jsonplaceholder.typicode.com/posts?${params}`).then(\n    (response) => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      return response.json();\n    }\n  );\n}\n\nfunction renderPosts(posts) {\n  const markup = posts\n    .map(({ id, title, body, userId }) => {\n      return `<li>\n          <h2 class=\"post-title\">${title.slice(0, 30)}</h2>\n          <p><b>Post id</b>: ${id}</p>\n          <p><b>Author id</b>: ${userId}</p>\n          <p class=\"post-body\">${body}</p>\n        </li>`;\n    })\n    .join(\"\");\n  userList.insertAdjacentHTML(\"beforeend\", markup);\n}\n\nfunction toggleAlertPopup() {\n  if (isAlertVisible) {\n    return;\n  }\n  isAlertVisible = true;\n  alertPopup.classList.add(\"is-visible\");\n  setTimeout(() => {\n    alertPopup.classList.remove(\"is-visible\");\n    isAlertVisible = false;\n  }, 3000);\n}\n}\n\n{    console.log('Task-Konsp:');\n\n}\n\n{    console.log('Task-Konsp:');\n\n}\n\n{    console.log('Task-Konsp:');\n\n}\n\n{    console.log('Task-Konsp:');\n\n}\n\n\n{console.log(': ');\n\n    \n    \n    \n    \n    \n}\n"],"names":["console","log","fetch","headers","Authorization","then","r","json","fetchPostsBtn","document","querySelector","userList","addEventListener","params","URLSearchParams","_limit","_page","response","ok","Error","status","$f4a4c9d3aacbe334$var$fetchPosts","posts","markup","map","id","title","body","userId","slice","join","innerHTML","$f4a4c9d3aacbe334$var$renderPosts","catch","error","alertPopup","isAlertVisible","page","limit","totalPages","classList","add","setTimeout","remove","$f4a4c9d3aacbe334$var$toggleAlertPopup","$f4a4c9d3aacbe334$var$fetchPosts1","insertAdjacentHTML","$f4a4c9d3aacbe334$var$renderPosts1","textContent"],"version":3,"file":"Modul-10.ec3bfb52.js.map"}