{"mappings":"YAAIA,QAAQC,IAAI,YAGdD,QAAQC,IAAI,2BA6GFD,QAAAC,IAAI,yBA+BZ,IAAMC,EAAc,SAAUC,GAE5BC,KAAKD,MAAQA,GAmBbH,QAAQC,IAAI,iBAEZ,IAAMI,EAAiBH,EAAYI,KAlBzB,CACVH,MAAO,UAkBDI,EAAqBL,EAAYI,KAZrB,CAClBH,MAAO,UAcPE,EAAe,UAGfE,EAAmB,OAGpBP,QAYQC,IAAI,aAMZD,QAAQC,IAAI,aAMZD,QAAQC,IAAI,aAMZD,QAAQC,IAAI,aAQhBD,QAAQC,IAAI,eAOZD,QAAQC,IAAI,eAOZD,QAAQC,IAAI,eASZD,QAAQC,IAAI,4BAER,SAAeO,MAWTC,KAPG,CACZC,SAAU,SAMW,oBAOtBV,QAAQC,IAAI,6BAkBU,CAId,SAAIU,EAAMC,GACjB,MAAO,GAAsCC,OAAnCD,EAAW,0BAAsDC,OAAbT,KAAKU,QAAQ,MAH5Ed,QAAQC,IAAI,4BAUYU,EAAML,KAJjB,CACZQ,QAAS,SAKXC,CAAa,SAMYJ,EAAML,KAJjB,CACZQ,QAAS,SAKXE,CAAa,QAKchB,QAGlBC,IAAI,wCAsBED,QAAQC,IAAI,gBAQZD,QAAQC,IAAI,gBAQZD,QAAQC,IAAI,gBAQZD,QAAQC,IAAI,gBAQZD,QAAQC,IAAI,gBASZD,QAAQC,IAAI,M","sources":["src/js/conspect/Mod5-Lesson9.js"],"sourcesContent":["    console.log('Repeta: ');\n\n\n{ console.log('Repeta: Контекст (this)');\n    /* \n    * - Где и как была объявлена функция НЕ ИМЕЕТ НИКАКОГО ВЛИЯНИЯ на контекстю\n    * - Контекст определяется В МОМЕНТ ВЫЗОВА ФУНКЦИИ, если он не привязан явно.\n    */\n    \n  {\n    /*\n    * Как метод объекта. В контексте объектаю\n    */\n\n    // const user = {\n    //     tag: 'Mango',\n    //     showTag() {\n    //         console.log('showTag -> this', this);\n    //     },\n    // };\n\n    // user.showTag(); // - момент вызова функции. Слева от имени функции\n    \n    /* Вызов без контекста\n    * - В строгом режиме = undefined\n    * - Не в строгом режиме = window\n    */\n\n    // const foo = function () {\n    //     console.log('foo -> this', this);\n    // };\n\n\n    // foo();\n  }\n\n\n  {\n/* \n* Как метод объекта, но объявлена как внешняя функция.\n* В контексте объекта.\n*/\n\n    // const showTag = function () {\n    //     console.log('showTab -> this', this);\n    //     console.log('showTab -> this.tag', this.tag);\n    // };\n\n    // showTag();\n\n    // const user = {\n    //     tag: 'Mango',\n    // };\n\n    // user.showUserTag = showTag;\n    // console.log('user', user)\n\n    // user.showUserTag();\n\n    /* \n    * Вызов без контекста, но объявлена как метод объекта.\n    */\n  }\n\n\n\n  {\n\n    /* \n    * Вызов без контекста, но объявлена как метод объекта.\n    */\n\n  //   const user = {\n  //   tag: 'Mango',\n  //     showTag() {\n  //     console.log('showTag -> this', this);\n  //     console.log('showTag -> this.tag', this.tag);\n  //   },\n  // };\n    \n  //   user.showTag();\n\n  //   const outerShowTag = user.showTag;\n\n  //   outerShowTag();\n  }\n\n    \n  {\n      /* \n      * Контекст в callback-функциях\n      */\n      \n  //     const user = { \n  //       tag: 'Mango',\n  //       showTag() {\n  //         console.log('showTag ');\n  //         console.log('showTag -> this', this);\n  //         // console.log('showTag -> this.tag', this.tag);\n  //   },\n  // };\n          \n  //         const invokeAction = function (action) {\n  //           console.log(action);\n\n  //           action();\n  //         };\n\n  //         invokeAction(user.showTag);\n    \n  }\n\n  { console.log('Repeta - call & apply')\n  \n    {\n//       const showThis = function (a, b, arr) {\n//       console.log(a, b, arr)\n//       console.log('showThis -> this', this);\n//     };\n\n//     showThis();\n\n//     const objA = {\n//       a: 5,\n//       b: 10,\n//     };\n\n//     showThis.call(objA, 10, 20, [30, 40]);\n//     showThis.apply(objA, [100, 200, [300, 400]]);\n\n//  const objB = {\n//       a: 5,\n//       b: 10,\n//     };\n\n//         showThis.call(objB, 15, 25, 35, 45);\n//     showThis.apply(objB, [105, 205, 305, 405]);\n\n//     showThis();\n}\n\n\n{\n    const changeColor = function (color) {\n      // console.log('changeColor -> this', this);\n      this.color = color;\n    };\n\n    const hat = {\n      color: 'black',\n    };\n\n    // changeColor.call(hat, 'orange');\n    // console.log(hat);\n\n        const sweater = {\n      color: 'green',\n      };\n      \n      // changeColor.call(sweater, 'blue');\n      // console.log(sweater);\n\n\n\n      console.log('Repeta - bind')\n      \n      const changeHatColor = changeColor.bind(hat);\n      const changeSweaterColor = changeColor.bind(sweater);\n      \n      // changeColor();\n      changeHatColor('yellow');\n      // console.log(hat);\n      \n      changeSweaterColor('red');\n      // console.log(sweater);\n      \n    }\n}\n\n\n\n  }\n\n\n\n\n    \n\n    {console.log('Example: ');\n\n\n\n}\n\n    {console.log('Example: ');\n\n\n\n}\n\n    {console.log('Example: ');\n\n\n\n}\n\n    {console.log('Example: ');\n\n\n\n}\n\n\n\n{console.log('Autocheck: ');\n\n\n\n\n}\n\n{console.log('Autocheck: ');\n\n\n\n\n}\n\n{console.log('Autocheck: ');\n\n\n    \n\n}\n\n\n\n{console.log('Task-Konsp: Метод \"Call');\n\nfunction greetGuest(greeting) {\n  // console.log(`${greeting}, ${this.username}.`);\n}\n\nconst mango = {\n  username: \"Манго\",\n};\nconst poly = {\n  username: \"Поли\",\n};\n\ngreetGuest.call(mango, \"Добро пожаловать\"); // Добро пожаловать, Манго.\n// greetGuest.call(poly, \"С приездом\"); // С приездом, Поли.\n\n\n\n}\n\n{console.log('Task-Konsp: Метод \"Apply\"');\n\nfunction greetGuest(greeting) {\n  console.log(`${greeting}, ${this.username}.`);\n}\n\nconst mango = {\n  username: \"Манго\",\n};\nconst poly = {\n  username: \"Поли\",\n};\n\n// greetGuest.apply(mango, [\"Добро пожаловать\"]); // Добро пожаловать, Манго.\n// greetGuest.apply(poly, [\"С приездом\"]); // С приездом, Поли.\n\n\n\n}\n\n{console.log('Task-Konsp: Метод \"bind\"');\n\n    function greet(clientName) {\n  return `${clientName}, добро пожаловать в «${this.service}».`;\n}\n\nconst steam = {\n  service: \"Steam\",\n    };\n    \n    const steamGreeter = greet.bind(steam);\n    \nsteamGreeter(\"Манго\"); // \"Манго, добро пожаловать в «Steam».\"\n\nconst gmail = {\n  service: \"Gmail\",\n    };\n    \n    const gmailGreeter = greet.bind(gmail);\n    \ngmailGreeter(\"Поли\"); // \"Поли, добро пожаловать в «Gmail».\"\n\n    \n\n\n}\n\n\n{console.log('Task-Konsp: \"bind\" и методы объекта ');\n\n//     const customer = {\n//   firstName: \"Jacob\",\n//   lastName: \"Mercer\",\n//   getFullName() {\n//     return `${this.firstName} ${this.lastName}`;\n//   },\n// };\n\n// function makeMessage(callback) {\n//   // callback() это вызов метода getFullName без объекта\n//   console.log(`Обрабатываем заявку от ${callback()}.`);\n// }\n\n// makeMessage(customer.getFullName); // Будет ошибка при вызове функции\n\n\n\n}\n\n\n{console.log('Task-Konsp: ');\n\n\n\n\n}\n\n\n{console.log('Task-Konsp: ');\n\n\n\n\n}\n\n\n{console.log('Task-Konsp: ');\n\n\n\n\n}\n\n\n{console.log('Task-Konsp: ');\n\n\n\n\n}\n\n\n{console.log('Task-Konsp: ');\n\n\n\n\n}\n\n\n\n{console.log(': ');\n\n    \n    \n    \n    \n    \n}\n"],"names":["console","log","$6e3556a740dd8045$var$changeColor","color","this","$6e3556a740dd8045$var$changeHatColor","bind","$6e3556a740dd8045$var$changeSweaterColor","greeting","call","username","$6e3556a740dd8045$var$greet","clientName","concat","service","$6e3556a740dd8045$var$steamGreeter","$6e3556a740dd8045$var$gmailGreeter"],"version":3,"file":"Modul-5.878fb8ef.js.map"}