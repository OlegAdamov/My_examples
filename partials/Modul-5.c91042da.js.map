{"mappings":"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","sources":["node_modules/@swc/helpers/lib/_class_extract_field_descriptor.js","node_modules/@swc/helpers/lib/_class_apply_descriptor_get.js","node_modules/@swc/helpers/lib/_check_private_redeclaration.js","node_modules/@swc/helpers/lib/_class_apply_descriptor_set.js","node_modules/@swc/helpers/lib/_class_check_private_static_access.js","node_modules/@swc/helpers/lib/_class_private_field_get.js","node_modules/@swc/helpers/lib/_class_private_field_init.js","node_modules/@swc/helpers/lib/_class_private_field_set.js","node_modules/@swc/helpers/lib/_class_static_private_field_spec_get.js","node_modules/@swc/helpers/lib/_define_property.js","src/js/Mod5-Lesson10.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classExtractFieldDescriptor;\nfunction _classExtractFieldDescriptor(receiver, privateMap, action) {\n    if (!privateMap.has(receiver)) {\n        throw new TypeError(\"attempted to \" + action + \" private field on non-instance\");\n    }\n    return privateMap.get(receiver);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classApplyDescriptorGet;\nfunction _classApplyDescriptorGet(receiver, descriptor) {\n    if (descriptor.get) {\n        return descriptor.get.call(receiver);\n    }\n    return descriptor.value;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _checkPrivateRedeclaration;\nfunction _checkPrivateRedeclaration(obj, privateCollection) {\n    if (privateCollection.has(obj)) {\n        throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classApplyDescriptorSet;\nfunction _classApplyDescriptorSet(receiver, descriptor, value) {\n    if (descriptor.set) {\n        descriptor.set.call(receiver, value);\n    } else {\n        if (!descriptor.writable) {\n            // This should only throw in strict mode, but class bodies are\n            // always strict and private fields can only be used inside\n            // class bodies.\n            throw new TypeError(\"attempted to set read only private field\");\n        }\n        descriptor.value = value;\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classCheckPrivateStaticAccess;\nfunction _classCheckPrivateStaticAccess(receiver, classConstructor) {\n    if (receiver !== classConstructor) {\n        throw new TypeError(\"Private static access of wrong provenance\");\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classPrivateFieldGet;\nvar _classExtractFieldDescriptor = _interopRequireDefault(require(\"./_class_extract_field_descriptor\"));\nvar _classApplyDescriptorGet = _interopRequireDefault(require(\"./_class_apply_descriptor_get\"));\nfunction _classPrivateFieldGet(receiver, privateMap) {\n    var descriptor = (0, _classExtractFieldDescriptor).default(receiver, privateMap, \"get\");\n    return (0, _classApplyDescriptorGet).default(receiver, descriptor);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classPrivateFieldInit;\nvar _checkPrivateRedeclaration = _interopRequireDefault(require(\"./_check_private_redeclaration\"));\nfunction _classPrivateFieldInit(obj, privateMap, value) {\n    (0, _checkPrivateRedeclaration).default(obj, privateMap);\n    privateMap.set(obj, value);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classPrivateFieldSet;\nvar _classExtractFieldDescriptor = _interopRequireDefault(require(\"./_class_extract_field_descriptor\"));\nvar _classApplyDescriptorSet = _interopRequireDefault(require(\"./_class_apply_descriptor_set\"));\nfunction _classPrivateFieldSet(receiver, privateMap, value) {\n    var descriptor = (0, _classExtractFieldDescriptor).default(receiver, privateMap, \"set\");\n    (0, _classApplyDescriptorSet).default(receiver, descriptor, value);\n    return value;\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classStaticPrivateFieldSpecGet;\nvar _classCheckPrivateStaticAccess = _interopRequireDefault(require(\"./_class_check_private_static_access\"));\nvar _classApplyDescriptorGet = _interopRequireDefault(require(\"./_class_apply_descriptor_get\"));\nfunction _classStaticPrivateFieldSpecGet(receiver, classConstructor, descriptor) {\n    (0, _classCheckPrivateStaticAccess).default(receiver, classConstructor);\n    (0, _classCheckPrivateStaticAccess).default(descriptor, \"get\");\n    return (0, _classApplyDescriptorGet).default(receiver, descriptor);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _defineProperty;\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\n","    console.log('Repeta: ');\n\n{ console.log('Repeta: Прототип Объекта');\n\n    \n    /* \n    * \n    * - https://miro.com/app/board/o9]_ku0WE0=/\n    * - Object.create()\n    * - [[Prototipe]] и __proto__\n    * - Object.getPrototypeOf()\n    * - Собственные свойства и Object.prototype.hasOwnProperty()\n    * - Цепочка прототипов \n    */\n    \n    // const objC = {\n    //     z: 5,\n    // };\n    // // console.log(\"objC: \", objC);\n\n\n    // const objB = Object.create(objC);\n    // objB.y = 2;\n\n    // // console.log(\"objB: \", objB);\n\n    // // console.log(objB.y);\n    // // console.log(objB.z);\n\n    // const objA = Object.create(objB);\n    // objA.x = 1;\n\n    // console.log(\"objA: \", objA.z);    // 'Это свойство на объекте-прототипе'\n\n    // objA.z = 1000;\n\n    // console.log(\"objA: \", objA);    // 'Это собственное свойство объекта'\n    // console.log(\"objC: \", objC);\n\n    // console.log(objA.hasOwnProperty('x')); // Поиск свойства в объекте (собственное - true / на объекте-прототипе - false)\n\n\n    \n    /*\n    * Алгоритм поиска свойства в цепочке прототипов:\n    * 1. Поиск начинается в собственных свойствах\n    * 2. Если свойства нет в собственных, поиск переходит к цепочке прототипов\n    * 3. Поиск прекращается при первом совпадении (есть такое свойство)\n    * 4. Возвращается значение свойства\n    */\n    \n    \n    \n}\n\n{ console.log('Repeta: Основы ООП: класс, экземпляр (объект), интерфейс');\n\n    /* \n    * Функции-конструкторы\n    * - Именование\n    * - Оператор new\n    * - Свойство Function.prototype\n    */\n    \n    const Car = function ({brand, model, price} = {})  {         // (config = {}) {\n        // console.log(config);\n                                                              // const { brand, model, price } = config;\n    // 2. Функция вызывается в контексте созданного объекта, \n    //    то есть в this записывается ссылка на него\n        // console.log(this);\n        this.brand = brand\n        this.model = model;\n        this.price = price;\n\n            // 3. В свойство this.__proto__ записывается ссылка на объект Car.prototype\n    //    то есть Car.prototype это ПРОТОТИП будущего объекта (экземпляра) - {constructor: f}\n\n\n\n\n   \n    // 4. Ссылка на объект возвращается в место вызова new Car\n    };\n\n    Car.prototype.sayHi = function () {\n        // console.log('Car.prototype.sayHi -> this', this);\n        // console.log('Hello ');\n    };\n\n            Car.prototype.changePrice = function (newPrice) {\n            this.price = newPrice;\n        };\n\n    // console.log(Car.prototype);\n\n    // 1. Если функция вызывается через new, создается пустой объект\n    const myCar = new Car({\n        brand: 'Audi',\n        model: 'Q3',\n        price: 35000,\n    });\n    // console.log(myCar);\n\n    myCar.sayHi();\n    \n    const myCar2 = new Car({\n        brand: \"BMW\",\n        model: 'X6',\n        price: 50000,\n    });\n    \n    // console.log(myCar2);\n\n        myCar2.sayHi();\n\n    \n    const myCar3 = new Car({\n        brand: \"Audi\",\n        model: 'A6',\n        price: 65000,\n    });\n    // console.log(myCar3);\n\n        myCar3.sayHi();\n\n\n  const User = function ({ email, password } = {}) {\n    this.email = email;\n    this.password = password;\n  };\n\n  User.prototype.changeEmail = function (newMail) {\n    this.email = newMail;\n  }\n\n    const mango = new User({email: 'mango@mail.com', password: 111111})\n  \n  mango.changeEmail('my-nwe-mail@mail.com')\n  // console.log(mango);\n  \n  \n  // 1. У каждого объекта есть свойство __proto__\n  // 2. В этом свойстве лежит ссылка на его ПРОТОТИП, то есть другой объект\n  // 3. При создании литерала объекта, в свойство __proto__ записывается ссылка на \n  //    Функция.ptototype\n  // 4. Функция-конструктор это просто функция :)\n  // 5. Всю \"магию\" делает оператор new\n  // 6. Если функция вызывается через new, создается пустой объект\n  // 7. Функция вызывается в контексте созданного объекта, \n  //    то есть в this записывается ссылка на него\n  // 8. В свойство this.__proto__ записывается ссылка на объект Функция.prototype\n  //    то есть Функция.prototype это ПРОТОТИП будущего объекта (экземпляра) - {constructor: f}\n  // 9. Ссылка на объект возвращается в место вызова new Функция( )\n\n\n  console.log('Repeta: Статические методы и свойства');\n/* \n* - Статические свойства и методы доступны только на самом конструкторе\n* - В статических методах не нужен this\n*/\n\n  User.message = 'Я статическое свойство, меня нет на экземплярах или в прототипе.'\n  \n  User.logInfo = function (obj) {\n    console.log(obj);\n  };\n  \n  // console.dir(User);\n  \n  // console.log(Math.round(5.1));\n  // console.log(Math.PI);\n  \n  \n  \n\n}\n\n{console.log('Repeta: Классы');\n  \n\n  /* \n  * - Объявления\n  * - конструктор\n  * - методы\n  * - static\n  * - приватные свойства\n  * - синтаксис публичных свойств и методы классов \n  * - геттеры и сеттеры\n  */\n\n{  class Car1 {\n    static description = 'Класс описывающий автомобиль';\n\n    static logInfo(carObj) {\n      // console.log('Car.logInfo -> carObj', carObf);\n    }\n\n    constructor( { brand, model, price } = {} ) { \n      // console.log('Выполняется constructor');\n      // console.log(this);\n\n      this.brand = brand;\n      this.model = model;\n      this.price = price;\n}\n      changePrice(newPrice) {\n        this.price = newPrice;\n      };\n    \n    updateModel(newModel) {\n      this.model = newModel;\n      }\n  }\n  \n  // console.dir(Car1);\n\n  // console.log(Car1.description)\n\n  const carInstance = new Car1({\n  brand: 'Audi',\n    model: 'Q3',\n      price: 35000,\n});\n  \n  // console.log(carInstance);\n  \n}\n\n  {\n    // console.log('геттеры и сеттеры')\n    class Car2 {\n      static description = 'Класс описывающий автомобиль';\n\n      constructor({ brand, model, price } = {}) {\n        // console.log('Выполняется constructor');\n        // console.log(this);\n\n        this._brand = brand;\n        this._model = model;\n        this._price = price;\n      }\n\n      get price() {\n        return this._price;\n      }\n\n      set price(newPrice) {\n        this._price = newPrice;\n      }\n    \n      get model() {\n        return this._model;\n      }\n\n      set model(newModel) {\n        this._model = newModel;\n      }\n    }\n\n  const carInstance = new Car2({\n  brand: 'Audi',\n    model: 'Q3',\n      price: 35000,\n});\n\n    // console.log(carInstance);\n\n    // console.log(carInstance.model);\n    carInstance.model = 'Q7';\n    // console.log(carInstance.model);\n\n    // console.log(carInstance.price);\n    carInstance.price = 50000;\n    // console.log(carInstance.price);\n  }\n  \n\n}\n\n{console.log('Repeta: Наследование');\n/* \n* - extends\n* - super()\n*/\n  \n  class Hero {\n    constructor(name = 'hero', xp = 0) { // ({ name = 'hero', xp = 0 } = {})\n      this.name = name;\n      this.xp = xp;\n    }\n\n    gainXp(amount) {\n      // console.log(`${this.name} получает ${amount} опыта`);\n      this.xp += amount;\n    }\n  }\n\n  // const mango = new Hero({ name: 'mango', xp: 1000 });\n  // console.log(mango);\n  \n  class Warrior extends Hero {\n    constructor(name, xp, weapon) {    // (config)\n      super(name, xp);    // (config)\n\n      this.weapon = weapon;\n    }\n\n    attack() {\n      // console.log(`${this.name} атакует используя ${this.weapon}`);\n}\n  }\n\n  class Berserk extends Warrior {\n    constructor(name, xp, weapon, warcry) {\n      super(name, xp, weapon);\n\n      this.warcry = warcry;\n    }\n\n    babyRage() {\n      // console.log(this.warcry);\n    }\n  }\n  \n  const ajax = new Berserk('ajax', 679, 'axe', 'waaaaaaah');\n  // console.log(ajax);\n\n    class Mage extends Hero {\n      constructor(name, xp, spells = []) {\n        super(name, xp, spells);\n\n        this.spells = spells;\n      }\n\n      cast() {\n        // console.log(`${this.name} что-то там кастует 🎈`);\n      }\n    }\n    \n    \n    \n    \n  \n\n  const mango = new Warrior('mango', 1000, 'алебарда'); //({ name: 'mango', xp: 1000, weapons: 50 })\n  // console.log(mango);\n  mango.gainXp(1000);\n  mango.attack();\n  mango.gainXp(19000);\n\n  const poly = new Mage('poly', 500, ['фаербол'])\n  // console.log(poly);\n  poly.cast();\n  poly.gainXp(300);\n\n\n//   console.log(\n//     'mango.__proto__ === Warrior.prototype ',\n//     mango.__proto__ === Warrior.prototype,\n//   );\n  \n//   console.log(\n//     'Warrior.prototype.__proto__ === Hero.prototype ',\n//     Warrior.prototype.__proto__ === Hero.prototype,\n//   );\n \n\n// console.log(\n//   'Hero.prototype.__proto__ === Object.prototype ',\n//   Hero.prototype.__proto__ === Object.prototype,\n// );\n\n}\n\n\n    {console.log('Example: ');\n\n\n\n}\n\n    {console.log('Example: ');\n\n\n\n}\n\n    {console.log('Example: ');\n\n\n\n}\n\n    {console.log('Example: ');\n\n\n\n}\n\n\n\n\n\n{console.log('Autocheck: 12');\n\nclass Car {\n  // Change code below this line\n    #brand;\n  constructor({ brand, model, price }) {\n    this.#brand = brand;\n    this.model = model;\n    this.price = price;\n  };\n\n  getBrand() {\n    return this.#brand;\n  };\n  \n  changeBrand(newBrand) {\n    this.#brand = newBrand;\n  };\n\n  // Change code above this line\n    }\n    \n    // console.log(new Car({ brand: \"Audi\", model: \"Q3\", price: 36000 }));\n\n\n}\n\n{console.log('Autocheck: 17');\n\n    class Car {\n  static #MAX_PRICE = 50000;\n  // Change code below this line\nstatic checkPrice(price) {\n    return (price > Car.#MAX_PRICE)\n        ? \"Error! Price exceeds the maximum\"\n        : \"Success! Price is within acceptable limits\";\n}\n\n\n\n  // Change code above this line\n  constructor({ price }) {\n    this.price = price;\n  }\n}\n\nconst audi = new Car({ price: 34000 });\nconst bmw = new Car({ price: 64000 });\n\n// console.log(Car.checkPrice(audi.price)); // \"Success! Price is within acceptable limits\"\n// console.log(Car.checkPrice(bmw.price)); // \"Error! Price exceeds the maximum\"\n\n\n\n\n}\n\n{console.log('Autocheck: ');\n\n\n    \n\n}\n\n\n\n\n\n{    console.log('Task-Konsp: ООП');\nconst baseSalary = 30000;\nconst overtime = 10;\nconst rate = 20;\n\nconst getWage = (baseSalary, overtime, rate) => {\n  return baseSalary + overtime * rate;\n};\n\n// console.log(getWage(baseSalary, overtime, rate));\n   \n    \n    const employee = {\n  baseSalary: 30000,\n  overtime: 10,\n  rate: 20,\n  getWage() {\n    return this.baseSalary + this.overtime * this.rate;\n  },\n    };\n// console.log(employee.getWage());\n    {\n        // console.log('Метод: Object.create(obj)')\n    \n        const animal = {\n            legs: 4,\n        };\n        const dog = Object.create(animal);\n        dog.name = \"Манго\";\n\n        // console.log(dog);\n        // console.log(animal.isPrototypeOf(dog));\n\n        // console.log(dog.hasOwnProperty(\"name\"));\n        // console.log(dog.name);\n        \n        // console.log(dog.hasOwnProperty(\"legs\"));\n        // console.log(dog.legs);\n    }\n    {\n        const animal = { eats: true };\nconst dog = Object.create(animal);\ndog.barks = true;\n\nfor (const key in dog) {\n     if (!dog.hasOwnProperty(key)) continue;\n\n//   console.log(key); // barks, eats\n}\n  }  \n}\n\n\n{    console.log('Task-Konsp:');\n\n}\n\n\n{    console.log('Task-Konsp:');\n\n}\n\n\n{    console.log('Task-Konsp: Конструктор класса');\nclass User {\n  // Синтаксис объявления метода класса\n  constructor(name, email) {\n    // Инициализация свойств экземпляра\n    this.name = name;\n    this.email = email;\n  }\n}\n\nconst mango = new User(\"Манго\", \"mango@mail.com\");\n// console.log(mango); // { name: 'Манго', email: 'mango@mail.com' }\n\nconst poly = new User(\"Поли\", \"poly@mail.com\");\n// console.log(poly); // { name: 'Поли', email: 'poly@mail.com' }\n  \n}\n\n{    console.log('Task-Konsp: Объект параметров');\n\n  class User {\n  // Деструктуризируем объект\n  constructor({ name, email }) {\n    this.name = name;\n    this.email = email;\n  }\n}\n\nconst mango = new User({\n  name: \"Манго\",\n  email: \"mango@mail.com\",\n});\n// console.log(mango); // { name: \"Манго\", email: \"mango@mail.com\" }\n\nconst poly = new User({\n  name: \"Поли\",\n  email: \"poly@mail.com\",\n});\n// console.log(poly); // { name: \"Поли\", email: \"poly@mail.com\" }\n}\n\n{    console.log('Task-Konsp: Методы класса');\n\n  class User {\n  constructor({ name, email }) {\n    this.name = name;\n    this.email = email;\n  }\n\n  // Метод getEmail\n  getEmail() {\n    return this.email;\n  }\n\n  // Метод changeEmail\n  changeEmail(newEmail) {\n    this.email = newEmail;\n  }\n}\n}\n\n\n{    console.log('Task-Konsp: ');\n\n  \n}\n\n\n{    console.log('Task-Konsp: ');\n\n}\n\n\n{    console.log('Task-Konsp: ');\n\n}\n\n\n{    console.log('Task-Konsp: ');\n\n}\n\n\n\n\n\n{    console.log('Task-Konsp: class - static');\n\n  class User {\n  static #takenEmails = [];\n\n  static isEmailTaken(email) {\n    return User.#takenEmails.includes(email);\n  }\n\n  #email;\n\n  constructor({ email }) {\n    this.#email = email;\n    User.#takenEmails.push(email);\n  }\n}\n\nconst mango = new User({ email: \"mango@mail.com\" });\n\n// console.log(User.isEmailTaken(\"poly@mail.com\"));\n// console.log(User.isEmailTaken(\"mango@mail.com\"));\n}\n\n{    console.log('Task-Konsp:');\n\n}\n\n\n{console.log(': ');\n\n    \n    \n    \n    \n    \n}\n"],"names":["Object","defineProperty","module","exports","value","default","receiver","privateMap","action","has","TypeError","get","descriptor","call","obj","privateCollection","set","writable","classConstructor","$e13576b86460cc50$exports","$e13576b86460cc50$var$_classExtractFieldDescriptor","$e13576b86460cc50$var$_classApplyDescriptorGet","$e13576b86460cc50$var$_interopRequireDefault","parcelRequire","__esModule","$bb98491953509995$exports","$bb98491953509995$var$_checkPrivateRedeclaration","$c36c16f840444775$exports","$c36c16f840444775$var$_classExtractFieldDescriptor","$c36c16f840444775$var$_classApplyDescriptorSet","$c36c16f840444775$var$_interopRequireDefault","$cf6c6c300826f12e$exports","$cf6c6c300826f12e$var$_classCheckPrivateStaticAccess","$cf6c6c300826f12e$var$_classApplyDescriptorGet","$cf6c6c300826f12e$var$_interopRequireDefault","$da4b248c00322402$exports","key","enumerable","configurable","console","log","Car","brand","model","price","this","prototype","sayHi","changePrice","newPrice","User","email","password","changeEmail","newMail","message","logInfo","Car1","static","carObj","updateModel","newModel","constructor","$parcel$interopDefault","Car2","_price","_model","_brand","carInstance","Hero","gainXp","amount","xp","name","Warrior","attack","weapon","super","Berserk","babyRage","warcry","Mage","cast","spells","mango","poly","$8d10ed20e8165464$var$_MAX_PRICE","animal","legs","create","eats","dog","barks","hasOwnProperty","$8d10ed20e8165464$var$_email","WeakMap","$8d10ed20e8165464$var$_takenEmails","includes","push"],"version":3,"file":"Modul-5.c91042da.js.map"}