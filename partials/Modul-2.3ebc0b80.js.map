{"mappings":"AAAA,CAAC,MAAMA,EAAU,CAAC,QAAS,OAAQ,OAAQ,QAAS,QAAS,SAGVC,QAA3CC,IAAIF,EAAQ,IACpBC,QAAQC,IAAIF,EAAQ,IACpBC,QAAQC,IAAIF,EAAQ,IACpBA,EAAQ,GAAK,SACbA,EAAQ,GAAK,SAEbC,QAAQC,IAAIF,GACZC,QAAQC,IAAIF,EAAQG,QAEpB,MAAMC,EAAmBJ,EAAQG,OAAS,EAC1CF,QAAQC,IAAIE,GACZH,QAAQC,IAAIF,EAAQI,IAEpB,IAAK,IAAIC,EAAI,EAAGA,EAAIL,EAAQG,OAAQE,GAAK,EACrCJ,QAAQC,IAAIF,EAAQK,IAGxB,IAAK,MAAMC,KAAUN,EACjBC,QAAQC,IAAII,GAGhB,MAAMC,EAAmB,QACzB,IAAIC,EAAU,kDAEyB,IAAlC,MAAMC,KAAUT,EACjB,GAAIS,IAAWF,EAAkB,CAC7BC,EAAU,4CACuB,MAIzCP,QAAQC,IAAIM,GACX,CAID,MAAME,EAAU,CAAC,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GACrCC,EAAY,GAGsB,IAAnC,IAAIN,EAAI,EAAGA,EAAIK,EAAQP,OAAQE,GAAK,EACjCK,EAAQL,GAAKM,GAGjBV,QAAQC,IAAI,oBAACS,MAAiCD,EAAAL,MAEjD,CAID,IAAIO,EAAI,EAGJC,EAAID,EACRX,QAAQC,IAAIU,GACZX,QAAQC,IAAIW,GAGGD,EAAX,GACJX,QAAQC,IAAIU,GAEmCX,QAAnCC,IAAIW,GACf,CAEA,MAAMC,EAAO,QACdb,QAAQC,IAAIY,EAAKC,MAAM,KAEvB,MAAMP,EAAU,2BACJP,QAAJC,IAAIM,EAAQO,MAAM,MACzB,CAGD,MAAMC,EAAQ,CAAC,aAAc,MAAU,aACpCf,QAAQC,IAAIc,EAAMC,KAAK,KACvBhB,QAAQC,IAAIc,EAAMC,KAAK,MACvBhB,QAAQC,IAAIc,EAAMC,KAAK,MACtB,CAGD,MAAMjB,EAAU,CAAC,QAAS,OAAQ,OAAQ,QAAS,QAAS,SAC5DC,QAAQC,IAAIF,EAAQkB,QAAQ,UAC5BjB,QAAQC,IAAIF,EAAQkB,QAAQ,YAE5BjB,QAAQC,IAAIF,EAAQmB,SAAS,UAC7BlB,QAAQC,IAAIF,EAAQmB,SAAS,QAC5B,CAGG,MAAMC,EAAQ,QAEA,UAAVA,GAA+B,eAAVA,GACrBnB,QAAQC,IAAI,sBAGF,UAAVkB,GACU,eAAVA,GACU,WAAVA,GACU,gBAAVA,GACAnB,QAAQC,IAAI,sBAEnB,CAGG,MACMkB,EAAQ,SADI,CAAC,QAAS,aAAc,SAAU,eAGzBD,SAASC,GAGhCnB,QAAQC,IAAI,GAAGkB,qBAEfnB,QAAQC,IAAI,GAAGkB,wBAEtB,CAGG,MAAMpB,EAAU,CAAC,QAAS,OAAQ,OAAQ,QAC9CC,QAAQC,IAAIF,EAAQqB,MAAM,EAAG,IAE5B,CAGG,MAAMC,EAAS,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GACzBC,EAAgBD,EAAOE,OAAO,EAAG,GACvCvB,QAAQC,IAAIoB,GAEZrB,QAAQC,IAAIqB,GACf,CAIG,MAAME,EAAS,CAAC,MAAO,QAAS,QAEhCA,EAAOD,OAAO,EAAG,EAAG,UACpBC,EAAOD,OAAO,EAAG,EAAG,QAAS,SAC7BvB,QAAQC,IAAIuB,GACf,CAIG,MAAMC,EAAY,CAAC,IAAK,MAAO,OAAQ,cAEvCA,EAAUF,OAAO,EAAG,EAAG,UACvBvB,QAAQC,IAAIwB,GACf,CAGG,MAAMC,EAAa,CAAC,QAAS,OAAQ,OAAQ,QACvCC,EAAa,CAAC,UAAW,SAEzBC,EAAyBF,EAAWG,OAAOF,GACjD3B,QAAQC,IAAI2B,GAEZ,MAAME,EAAyBH,EAAWE,OAAOH,GACjD1B,QAAQ+B,MAAMD,GAEd9B,QAAQ+B,MAAML,GACd1B,QAAQ+B,MAAMJ","sources":["src/js/conspect/Mod2-Lesson3.js"],"sourcesContent":["{const clients = [\"Mango\", \"Poly\", \"Ajax\", \"Daria\", \"Robin\", \"Frank\"];\n\n// // Указывая в скобках индекс элемента мы получаем его значение\nconsole.log(clients[0]);\nconsole.log(clients[1]);\nconsole.log(clients[2]);\nclients[0] = \"Friend\";\nclients[1] = \"Maksim\";\n\nconsole.log(clients);\nconsole.log(clients.length);\n\nconst lastElementIndex = clients.length - 1;\nconsole.log(lastElementIndex);\nconsole.log(clients[lastElementIndex]);\n\nfor (let i = 0; i < clients.length; i += 1) {\n    console.log(clients[i]);\n}\n\nfor (const client of clients) {\n    console.log(client);\n}\n\nconst clientNameToFind = \"Frank\";\nlet message = \"Клиент с таким иенем отсутствует в базе данных!\";\n\nfor (const client of clients) {\n    if (client === clientNameToFind) {\n        message = \"Клиент с таким именем есть в базе данных!\";\n        break;\n    }\n    \n}\nconsole.log(message);\n}\n\n\n{\nconst numbers = [1, 5, 16, 28, 30, 38, 10, 3];\nconst threshold = 15;\n// // Для чисел меньше чем порог срабатывает continue, выполнение тела прекращается\n// // и управление передаётся на следующую итерацию.\nfor (let i = 0; i < numbers.length; i += 1) {\n    if (numbers[i] < threshold) {\n        continue;\n    }\n    console.log(`Число больше чем ${threshold}: ${numbers[i]}`);\n}\n}\n\n\n{\nlet a = 5;\n// // Присвоение по значению, в памяти будет создана еще\n// // одна ячейка в которую будет скопировано значение 5\nlet b = a;\nconsole.log(a); // 5\nconsole.log(b); // 5\n\n// // Изменим значение a\na = 10;\nconsole.log(a); // 10\n// // Значение b не изменилось так как это отдельная копия\n    console.log(b); // 5\n}\n\n{const name = \"Mango\";\nconsole.log(name.split(\"\"));\n\nconst message = \"JavaScript это интересно\";\nconsole.log(message.split(\" \"));\n}\n\n{\nconst words = [\"JavaScript\", \"это\", \"интересно\"];\nconsole.log(words.join(\"\"));\nconsole.log(words.join(\" \"));\nconsole.log(words.join(\"-\"));\n}\n\n{\nconst clients = [\"Mango\", \"Poly\", \"Ajax\", \"Daria\", \"Robin\", \"Frank\"];\nconsole.log(clients.indexOf(\"Robin\"));\nconsole.log(clients.indexOf(\"Monkong\"));\n\nconsole.log(clients.includes(\"Frank\"));\nconsole.log(clients.includes(\"Pol\"));\n}\n\n{\n    const fruit = \"apple\";\n\n    if (fruit === \"apple\" || fruit === \"strawberry\") {\n        console.log(\"It is a red fruit!\");\n    }\n\n    if (fruit === \"apple\" ||\n        fruit === \"strawberry\" ||\n        fruit === \"cherry\" ||\n        fruit === \"cranberries\") {\n        console.log(\"It is a red fruit!\");\n    }\n}\n\n{\n    const redFruits = [\"apple\", \"strawberry\", \"cherry\", \"cranberries\"];\n    const fruit = \"cherry\";\n    \n    const hasFruit = redFruits.includes(fruit);\n\n    if (hasFruit) {\n        console.log(`${fruit} is a red fruit!`);\n    } else {\n        console.log(`${fruit} is not a red fruit`);\n}\n}\n\n{\n    const clients = [\"Mango\", \"Ajax\", \"Poly\", \"Kiwi\"];\nconsole.log(clients.slice(0, 2)); // [\"Poly\", \"Kiwi\"]\n\n}\n\n{\n    const scores = [1, 2, 3, 4, 5, 6];\n    const deletedScores = scores.splice(0, 3);\n    console.log(scores);\n\n    console.log(deletedScores);\n}\n\n\n{\n    const colors = [\"red\", \"green\", \"blue\"];\n\n    colors.splice(2, 0, \"purple\");\n    colors.splice(1, 0, \"white\", \"black\");\n    console.log(colors);\n}\n\n\n{\n    const languages = ['C', \"C++\", \"Java\", \"JavaScript\"];\n\n    languages.splice(1, 2, \"Python\");\n    console.log(languages);\n}\n\n{\n    const oldClients = [\"Mango\", \"Ajax\", \"Poly\", \"Kiwi\"];\n    const newClients = [\"Monkong\", \"Singu\"];\n\n    const allClientsWithOldFirst = oldClients.concat(newClients);\n    console.log(allClientsWithOldFirst);\n\n    const allClientsWithNewFirst = newClients.concat(oldClients);\n    console.table(allClientsWithNewFirst);\n\n    console.table(oldClients);\n    console.table(newClients);\n}\n\n\n\n\n\n\n\n\n\n\n"],"names":["clients","console","log","length","lastElementIndex","i","client","clientNameToFind","message","client1","numbers","threshold","a","b","name","split","words","join","indexOf","includes","fruit","slice","scores","deletedScores","splice","colors","languages","oldClients","newClients","allClientsWithOldFirst","concat","allClientsWithNewFirst","table"],"version":3,"file":"Modul-2.3ebc0b80.js.map"}