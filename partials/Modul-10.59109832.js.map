{"mappings":"4hBAQAA,QAAQC,IAAI,YAEVD,QAAQC,IAAI,qBAQVC,MAAM,iEANU,CACZC,QAAS,CACLC,cAAe,MAKlBC,MAAK,SAAAC,G,OAAKA,EAAEC,UACZF,KAAKL,QAAQC,KAcrBD,QAMYC,IAAI,aAMZD,QAAQC,IAAI,aAMZD,QAAQC,IAAI,aAMZD,QAAQC,IAAI,aAUhBD,QAAQC,IAAI,eAOZD,QAAQC,IAAI,eAOZD,QAAQC,IAAI,eAWRD,QAAQC,IAAI,yBAEJ,IAAHO,EAAgBC,SAASC,cAAc,QAC3CC,EAAWF,SAASC,cAAc,UAExCF,EAAcI,iBAAiB,SAAS,WAMxC,IACQC,KAAS,IAAIC,gBAAgB,CACjCC,OAAQ,EAERC,MAAO,IAGFd,MAAM,8CAAqDe,OAAPJ,IAAUR,MACnE,SAACa,GACC,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASX,WAhBjBF,MAAK,SAACiB,G,OAqBX,SAAqBA,GACnB,IAAMC,EAASD,EACZE,KAAI,SAAAC,G,IAAGC,EAAED,EAAFC,GAAIC,EAAKF,EAALE,MAAOC,EAAIH,EAAJG,KAAMC,EAAMJ,EAANI,OACvB,MAAO,0CAEkBZ,OADIU,EAAMG,MAAM,EAAG,IAAI,wCAErBb,OADFS,EAAG,yCAEDT,OADAY,EAAO,yCACFZ,OAALW,EAAK,0BAGjCG,KAAK,IACRpB,EAASqB,UAAYT,EAhCFU,CAAYX,MAC5BY,OAAM,SAACC,G,OAAUnC,QAAQC,IAAIkC,SAmC7BnC,QAAQC,IAAI,oCAEb,IAAMmC,EAAgB3B,SAASC,cAAc,QAC3C2B,EAAW5B,SAASC,cAAc,UAClC4B,EAAa7B,SAASC,cAAc,UACtC6B,GAAiB,EAGjBC,EAAO,EAMXJ,EAAcxB,iBAAiB,SAAS,WAEtC,GAAI4B,EAJa,GAKf,OA+CJ,WACE,GAAID,EACF,OAEFA,GAAiB,EACjBD,EAAWG,UAAUC,IAAI,cACzBC,YAAW,WACTL,EAAWG,UAAUG,OAAO,cAC5BL,GAAiB,IAChB,KAxDMM,GAiBX,IACQhC,KAAS,IAAIC,gBAAgB,CACjCC,OA1BQ,EA2BRC,MAAOwB,IAGFtC,MAAM,8CAAqDe,OAAPJ,IAAUR,MACnE,SAACa,GACC,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASX,WAxBjBF,MAAK,SAACiB,IA6BX,SAAqBA,GACnB,IAAMC,EAASD,EACZE,KAAI,SAAAC,G,IAAGC,EAAED,EAAFC,GAAIC,EAAKF,EAALE,MAAOC,EAAIH,EAAJG,KAAMC,EAAMJ,EAANI,OACvB,MAAO,0CAEkBZ,OADIU,EAAMG,MAAM,EAAG,IAAI,wCAErBb,OADFS,EAAG,yCAEDT,OADAY,EAAO,yCACFZ,OAALW,EAAK,0BAGjCG,KAAK,IACRM,EAASS,mBAAmB,YAAavB,GAvCrCwB,CAAYzB,IAEZkB,GAAQ,GAGG,IACTJ,EAAcY,YAAc,uBAG/Bd,OAAM,SAACC,G,OAAUnC,QAAQC,IAAIkC,SA4CjCnC,QAEYC,IAAI,eAIZD,QAAQC,IAAI,eAIZD,QAAQC,IAAI,eAIZD,QAAQC,IAAI,eAKhBD,QAAQC,IAAI,M","sources":["src/js/Mod10-Lesson20.js"],"sourcesContent":["import '../sass/_modul10.scss'\n    import pokemonCardTpl from '../templates/pokemon-card.hbs';\n    import API from './api-service'\nimport templateFunction from '../templates/pokemon-card.hbs';\nimport getRefs from './get-refs';\n   \n\n\nconsole.log('Repeta: ');\n\n{ console.log('Repeta: Пагинация');\n\n    const options = {\n        headers: {\n            Authorization: '',\n        },\n    };\n\n    fetch('https://newsapi.org/v2/everything?q=cat&language=en&pageSize=5', options)\n        .then(r => r.json())\n        .then(console.log);\n    \n\n\n\n\n\n\n\n\n\n\n\n    \n}\n\n\n\n\n\n    {console.log('Example: ');\n\n\n\n}\n\n    {console.log('Example: ');\n\n\n\n}\n\n    {console.log('Example: ');\n\n\n\n}\n\n    {console.log('Example: ');\n\n\n\n}\n\n\n\n\n\n{console.log('Autocheck: ');\n\n\n\n\n}\n\n{console.log('Autocheck: ');\n\n\n\n\n}\n\n{console.log('Autocheck: ');\n\n\n    \n\n}\n\n\n\n\n\n{    console.log('Task-Konsp: Пагинация');\n\n    const fetchPostsBtn = document.querySelector(\".btn\");\nconst userList = document.querySelector(\".posts\");\n\nfetchPostsBtn.addEventListener(\"click\", () => {\n  fetchPosts()\n    .then((posts) => renderPosts(posts))\n    .catch((error) => console.log(error));\n});\n\nfunction fetchPosts() {\n  const params = new URLSearchParams({\n    _limit: 5,\n    // Change the group number here\n    _page: 1\n  });\n\n  return fetch(`https://jsonplaceholder.typicode.com/posts?${params}`).then(\n    (response) => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      return response.json();\n    }\n  );\n}\n\nfunction renderPosts(posts) {\n  const markup = posts\n    .map(({ id, title, body, userId }) => {\n      return `<li>\n          <h2 class=\"post-title\">${title.slice(0, 30)}</h2>\n          <p><b>Post id</b>: ${id}</p>\n          <p><b>Author id</b>: ${userId}</p>\n          <p class=\"post-body\">${body}</p>\n        </li>`;\n    })\n    .join(\"\");\n  userList.innerHTML = markup;\n}\n}\n\n{    console.log('Task-Konsp:Приём «Загрузить ещё»');\n\n    const fetchPostsBtn = document.querySelector(\".btn\");\nconst userList = document.querySelector(\".posts\");\nconst alertPopup = document.querySelector(\".alert\");\nlet isAlertVisible = false;\n\n// Controls the group number\nlet page = 1;\n// Controls the number of items in the group\nlet limit = 2;\n// In our case total number of pages is calculated on frontend\nconst totalPages = 100 / limit;\n\nfetchPostsBtn.addEventListener(\"click\", () => {\n  // Check the end of the collection to display an alert\n  if (page > totalPages) {\n    return toggleAlertPopup();\n  }\n\n  fetchPosts()\n    .then((posts) => {\n      renderPosts(posts);\n      // Increase the group number\n      page += 1;\n\n      // Replace button text after first request\n      if (page > 1) {\n        fetchPostsBtn.textContent = \"Fetch more posts\";\n      }\n    })\n    .catch((error) => console.log(error));\n});\n\nfunction fetchPosts() {\n  const params = new URLSearchParams({\n    _limit: limit,\n    _page: page\n  });\n\n  return fetch(`https://jsonplaceholder.typicode.com/posts?${params}`).then(\n    (response) => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      return response.json();\n    }\n  );\n}\n\nfunction renderPosts(posts) {\n  const markup = posts\n    .map(({ id, title, body, userId }) => {\n      return `<li>\n          <h2 class=\"post-title\">${title.slice(0, 30)}</h2>\n          <p><b>Post id</b>: ${id}</p>\n          <p><b>Author id</b>: ${userId}</p>\n          <p class=\"post-body\">${body}</p>\n        </li>`;\n    })\n    .join(\"\");\n  userList.insertAdjacentHTML(\"beforeend\", markup);\n}\n\nfunction toggleAlertPopup() {\n  if (isAlertVisible) {\n    return;\n  }\n  isAlertVisible = true;\n  alertPopup.classList.add(\"is-visible\");\n  setTimeout(() => {\n    alertPopup.classList.remove(\"is-visible\");\n    isAlertVisible = false;\n  }, 3000);\n}\n}\n\n{    console.log('Task-Konsp:');\n\n}\n\n{    console.log('Task-Konsp:');\n\n}\n\n{    console.log('Task-Konsp:');\n\n}\n\n{    console.log('Task-Konsp:');\n\n}\n\n\n{console.log(': ');\n\n    \n    \n    \n    \n    \n}\n"],"names":["console","log","fetch","headers","Authorization","then","r","json","$37793374ffe57eb8$var$fetchPostsBtn","document","querySelector","$37793374ffe57eb8$var$userList","addEventListener","params","URLSearchParams","_limit","_page","concat","response","ok","Error","status","posts","markup","map","param","id","title","body","userId","slice","join","innerHTML","$37793374ffe57eb8$var$renderPosts","catch","error","$37793374ffe57eb8$var$fetchPostsBtn1","$37793374ffe57eb8$var$userList1","$37793374ffe57eb8$var$alertPopup","$37793374ffe57eb8$var$isAlertVisible","$37793374ffe57eb8$var$page","classList","add","setTimeout","remove","$37793374ffe57eb8$var$toggleAlertPopup","insertAdjacentHTML","$37793374ffe57eb8$var$renderPosts1","textContent"],"version":3,"file":"Modul-10.59109832.js.map"}