{"mappings":"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","sources":["node_modules/@swc/helpers/lib/_object_spread.js","node_modules/@swc/helpers/lib/_define_property.js","src/js/Mod3-Lesson5.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _objectSpread;\nvar _defineProperty = _interopRequireDefault(require(\"./_define_property\"));\nfunction _objectSpread(target) {\n    for(var i = 1; i < arguments.length; i++){\n        var source = arguments[i] != null ? arguments[i] : {};\n        var ownKeys = Object.keys(source);\n        if (typeof Object.getOwnPropertySymbols === 'function') {\n            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {\n                return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n            }));\n        }\n        ownKeys.forEach(function(key) {\n            (0, _defineProperty).default(target, key, source[key]);\n        });\n    }\n    return target;\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _defineProperty;\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\n","console.log('Repeta: ');\n\n{/* Объекты (делаем плейлист музыки: имя, рейтинг, треки, кол-во треков)\n* - Литерал объекта\n* - Свойства, ключи (имя) и значения\n* - Как отличить объект от области видимости\n*\n*\n*/\n\n\n// const playlist = {\n//     name: 'Мой супер плейлист',\n//     rating: 5,\n//     tracks: ['track-1', 'track-2', 'track-3'],\n//     trackCount: 3,\n// };\n\n// console.log(playlist);\n}\n\n{/* Доступ к свойству\n* - obj.key\n* - obj[key]\n* - Отсутствующие свойства\n*\n*/\n// const playlist = {\n//     name: 'Мой супер плейлист',\n//     rating: 5,\n//     tracks: ['track-1', 'track-2', 'track-3'],\n//     trackCount: 3,\n// };\n\n// playlist.phone = 10;\n// playlist.rating = 15;\n\n// console.log(playlist);\n// console.log(playlist.tracks);\n// console.log(playlist.name);\n// console.log(playlist.trackCount);\n\n// console.log(playlist['rating']);\n}\n\n{/* Короткая запись свойства\n*/\n// const username = 'Mango';\n// const email = 'mango@mail.com'\n\n// const signupData = {\n//     username: username,\n//     email,\n// };\n// console.log(signupData)\n}\n\n{/* Вычисляемые свойства\n*/\n\n// <input name=\"color\" value=\"tomato\" >\n\n// const inputName = 'color';\n// const inputValue = 'tomato';\n\n// const colorPickerData = {\n// [inputName]: inputValue,\n// };\n\n// console.log(colorPickerData);\n}\n\n{/* Методы объекта и this при обращении к свойствам в методах\n*\n* http://fecore.net.ua/books/m5ph3r-javascript/module-03/images/context.jpg\n*\n* - changeName\n* - addTrack\n* - updateRating\n* - getTrackCount\n*\n*/\n\n    // const playlist = {\n    //     name: 'Мой супер плейлист',\n    //     rating: 5,\n    //     tracks: ['track-1', 'track-2', 'track-3'],\n    //     trackCount: 3,\n    //     getName() {\n    //         console.log('Ага, это getName :)');\n    //     }\n    // };\n\n    // console.log(playlist);\n    // playlist.getName(5);\n}\n\n{    console.log('Task - 1');\n    /* Замена имени через функцию\n    * \n    *\n    *\n    * - \n    * - \n    * - \n    *\n    */\n\n    const playlist = {\n        name: 'Мой супер плейлист',\n        rating: 5,\n        tracks: ['track-1', 'track-2', 'track-3'],\n        changeName(newName) {\n            // console.log('this внутри changeName: ', this);\n            this.name = newName;\n        },\n        addTrack(track) {\n            this.tracks.push(track);\n        },\n        updateRating(newRating) {\n            this.rating = newRating;\n        },\n        getTrackCount() { return this.tracks.length; },\n    };\n\n    // console.log(playlist.getTrackCount());\n\n    // playlist.changeName('Новое имя');\n\n    // playlist.addTrack('новый трек');\n    // console.log(playlist.getTrackCount());\n\n    // playlist.addTrack('новый трек');\n    // console.log(playlist.getTrackCount());\n\n\n    // playlist.updateRating(4);\n\n    // console.log(playlist);\n}\n\n\n \n{/* object.entries(obj)\n*\n*\n* - \n* - \n* - \n*\n*/\n}\n\n{/* Перебор через for...in и Object.keys|values|entries\n*\n* - \n*/\n\n// const feedback = {\n//     good: 5,\n//     neutral: 10,\n//     bad: 3,\n// };\n\n//     let totalFeedback = 0;\n    \n//     const keys = Object.keys(feedback); // Возвращает массив ключей\n\n//     console.log(keys);\n\n//     for (const key of keys) {\n//         console.log(key);\n//         console.log(feedback[key]);\n\n//         totalFeedback += feedback[key];\n//     }\n//     console.log('totalFeedback: ', totalFeedback);\n    \n\n//     const values = Object.values(feedback); // Возвращает массив значений\n\n//     console.log(values);\n\n    \n//     for (const value of values) {\n//         console.log(value);\n\n//         totalFeedback += value\n//     }\n\n//     console.log('totalFeedback: ', totalFeedback);\n}\n\n{  console.log('Task - Работа с коллекцией(масивом объекта)');\n\n/*\n*\n*/\n\n    const friends = [\n        { name: 'Mango', online: false },\n        { name: 'Kiwi', online: true },\n        { name: 'Poly', online: true },\n        { name: 'Ajax', online: false },\n    ];\n\n    // console.table(friends);\n\n    // for (const friend of friends) {\n    //     console.log(friend.name);\n\n    //     friend.newprop = 555;\n    // }\n    \n    // console.table(friends);\n    /* \n    * Ищем друга по имени\n    */\n    \n    const findFriendByName = function (allFriends, friendName) { \n    for (const friend of allFriends) {\n        // console.log(friend);\n        // console.log(friend.name);\n\n        if (friend.name === friendName) {\n            return \"COMPLETE!!!\"\n        }\n        } \n        return 'Do not complete !!!'\n};\n    // console.log(findFriendByName(friends, 'Poly'));\n    // console.log(findFriendByName(friends, 'Chelsy'));\n\n/* \n* Получаем имена всех друзей\n*/\n    \n    const getAllNames = function (allFriends) {\n        const names = [];\n\n        for (const friend of allFriends) {\n            // console.log(friend.name);\n\n            names.push(friend.name);\n        }\n\n        return names;\n    };\n\n\n    // console.log(getAllNames(friends));\n\n    /*\n    * Получаем имена только друзей, которые онлайна\n    */\n    const getOnlineFriends = function (allFriends) {\n        const onlineFriends = [];\n\n        for (const friend of allFriends) {\n            // console.log(friend);\n            // console.log(friend.online);\n\n            if (friend.online) {\n                onlineFriends.push(friend);\n\n            }\n        }\n        return onlineFriends;\n    };\n    \n    // console.log(getOnlineFriends(friends));\n\n    const getOfflineFriends = function (allFriends) { \n\n    // console.log(getOfLineFriends(friends));\nconst offlineFriends = [];\n\n        for (const friend of allFriends) {\n            // console.log(friend);\n            // console.log(friend.online);\n\n            if (!friend.online) {\n                \n                offlineFriends.push(friend);\n            }\n        }\n        return offlineFriends;\n    \n    };\n    // console.log(getOfflineFriends(friends));\n\n    const getFriendsByOnlineStatus = function (allFriends) {\n        const friendsByStatus = {\n            online: [],\n            offline: [],\n        };\n\n        for (const friend of allFriends) {\n            if (friend.online) {\n                friendsByStatus.online.push(friend);\n                continue;\n            }\n\n            friendsByStatus.offline.push(friend);\n        }\n            \n        return friendsByStatus;\n    };\n\n        \n\n// console.log(getFriendsByOnlineStatus(friends));\n}\n\n{ console.log('Task - Работаем с коллекцией товара в корзине')\n/*  \n* - getItems()\n* - add(product)\n* - remove(productName)\n* - clear()\n* - countTotalPrice()\n* - increaseQuantity(productName)\n* - decreaseQuantity(productName)\n*\n* { name: 'apple', price: 50 }\n* { name: 'raspberry', price: 70 }\n* { name: 'lemon', price: 60 }\n* { name: 'strawberry', price: 110 }\n*/\n    \n    const cart = {\n        items: [],\n        getItems() {\n            return this.items;\n         },\n        add(product) {\n\n            console.table(this.items);\n            for (const item of this.items) {\n\n                if (item.name === product.name) {\n                    item.quantity += 1;   // console.log('такой продукт уже есть', product.name);\n                    return;\n                }\n            }\n            const newProduct = {\n                ...product,\n\n                quantity: 1,\n            };\n\n            this.items.push(newProduct);\n        },\n        remove(productName) { \n            for (let i = 0; i < this.items.length; i += 1) {\n              \n                const { name } = this.items[i];\n            if (productName === this.items[i].name) {\n                // console.log('Нашли такой продукт: ', productName);\n                // console.log('индекс: ', i);\n                this.items.splice(i, 1);\n                }\n            }\n        },\n        clear() {\n            this.items = [];\n         },\n        countTotalPrice() {\n        const { items } = this;    // console.log(this.items)            \n        let total = 0;\n\n         for (const { price, quantity } of items)    {   // for (const item of this.items)\n             total += price * quantity;              // total += item.price;\n            }\n\n            return total;\n         },\n        increaseQuantity(productName) {},\n        decreaseQuantity(productName) {},\n}\n    \n    // console.log(cart.getItems());\n\ncart.add({ name: '🍎', price: 50 });\ncart.add({ name: '🍇', price: 70 });\ncart.add({ name: '🍋', price: 60 });\ncart.add({ name: '🍋', price: 60 });\ncart.add({ name: '🍓', price: 110 });\ncart.add({ name: '🍓', price: 110 });\ncart.add({ name: '🍓', price: 110 });\n    \nconsole.table(cart.getItems());\n    \ncart.remove('🍋');\n// console.table(cart.getItems());\n\nconsole.log('Total: ', cart.countTotalPrice());\n    \n\n    cart.clear();\n    // console.table(cart.getItems());\n    \n    // cart.increaseQuantity('🍎');\n    // console.table(cart.getItems());\n    \n    // cart.decreaseQuantity('🍋');\n    // cart.decreaseQuantity('🍋');\n    // console.table(cart.getItems());\n    \n}\n\n\n\n    \n    \n    \n/* \n*\n*/\n\n"],"names":["Object","defineProperty","module","exports","value","default","target","i","arguments","length","source","ownKeys","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","enumerable","forEach","key","$9eddae5a012cde57$var$_defineProperty","obj","parcelRequire","__esModule","configurable","writable","$dDDEV","console","log","$59e9282fbaeefe79$var$cart","items","getItems","this","add","product","table","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","item","name","quantity","err","return","newProduct","$parcel$interopDefault","push","remove","productName","splice","clear","countTotalPrice","total","_value","price","increaseQuantity","decreaseQuantity"],"version":3,"file":"Modul-3.e87b25ae.js.map"}